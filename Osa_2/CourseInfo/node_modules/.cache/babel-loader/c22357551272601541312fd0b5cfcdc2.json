{"ast":null,"code":"var _jsxFileName = \"/Users/matiaslang/Desktop/koulu/FullStack2019/Osa_2/firstpart/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Note = ({\n  note,\n  key,\n  exercises\n}) => {\n  return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, note, \"   \", exercises);\n};\n\nconst Total = ({\n  total\n}) => React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, \"Total of \", total, \" exercises\");\n\nconst AllCourses = props => {\n  const courses = () => props.course.map(parts => React.createElement(Course, {\n    course: parts.parts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }));\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, courses());\n};\n\nconst Course = props => {\n  const reducer = (accumulator, currentValue) => accumulator + currentValue;\n\n  console.log(\"PROPS ON: \", props);\n\n  const rows = () => props.course.parts.map(parts => React.createElement(Note, {\n    key: parts.id,\n    note: parts.name,\n    exercises: parts.exercises,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }));\n\n  console.log(\"OSAT OVAT\", props.course.part);\n  var total = props.course.parts.map(parts => parts.exercises);\n  total = total.reduce(reducer);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, props.course.name), rows(), React.createElement(Total, {\n    total: total,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }));\n};\n\nconst App = () => {\n  const courses = [{\n    name: 'Half Stack application development',\n    parts: [{\n      name: 'Fundamentals of React',\n      exercises: 10,\n      id: 1\n    }, {\n      name: 'Using props to pass data',\n      exercises: 7,\n      id: 2\n    }, {\n      name: 'State of a component',\n      exercises: 14,\n      id: 3\n    }, {\n      name: 'Redux',\n      exercises: 11,\n      id: 4\n    }]\n  }, {\n    name: 'Node.js',\n    parts: [{\n      name: 'Routing',\n      exercises: 3,\n      id: 1\n    }, {\n      name: 'Middlewares',\n      exercises: 7,\n      id: 2\n    }]\n  }];\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(AllCourses, {\n    course: courses,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 98\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/matiaslang/Desktop/koulu/FullStack2019/Osa_2/firstpart/src/index.js"],"names":["React","ReactDOM","Note","note","key","exercises","Total","total","AllCourses","props","courses","course","map","parts","Course","reducer","accumulator","currentValue","console","log","rows","id","name","part","reduce","App","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Note = ({note, key, exercises }) => {\n  return (\n    <p>{note}   {exercises}</p>\n  )\n}\nconst Total = ({total}) => (\n  <p>Total of {total} exercises</p>\n)\n\nconst AllCourses = (props) => {\n\n  const courses = () => props.course.map(parts => \n    <Course course = {parts.parts}/>)\n  \n  \n  return(\n    <div>{courses()}</div>\n  )\n}\n\nconst Course = (props) => {\n  \n  const reducer = (accumulator, currentValue) => accumulator + currentValue\n  console.log(\"PROPS ON: \" ,props)\n  const rows = () => props.course.parts.map(parts => \n    <Note \n      key={parts.id}\n      note={parts.name}\n      exercises={parts.exercises}\n    />\n  )\n  console.log(\"OSAT OVAT\" , props.course.part)\n  var total = props.course.parts.map(parts => parts.exercises)\n  total = total.reduce(reducer)\n  return(\n  <div>\n    <h1>{props.course.name}</h1>\n    {rows()}\n    <Total total={total}/>\n  </div>\n  )\n}\n\nconst App = () => {\n  const courses = [\n    {\n      name: 'Half Stack application development',\n      parts: [\n        {\n          name: 'Fundamentals of React',\n          exercises: 10,\n          id: 1\n        },\n        {\n          name: 'Using props to pass data',\n          exercises: 7,\n          id: 2\n        },\n        {\n          name: 'State of a component',\n          exercises: 14,\n          id: 3\n        },\n        {\n          name: 'Redux',\n          exercises: 11,\n          id: 4\n        }\n      ]\n    }, \n    {\n      name: 'Node.js',\n      parts: [\n        {\n          name: 'Routing',\n          exercises: 3,\n          id: 1\n        },\n        {\n          name: 'Middlewares',\n          exercises: 7,\n          id: 2\n        }\n      ]\n    }\n  ]\n  return (\n    <div>\n      <AllCourses course={courses} />\n    </div>\n  )\n}\n\nReactDOM.render(\n  <App />, document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}