{"ast":null,"code":"var _jsxFileName = \"/Users/matiaslang/Desktop/koulu/FullStack2019/Osa_2/firstpart/src/AllCourses.js\";\nimport React from 'react';\n\nconst Note = ({\n  note,\n  id,\n  exercises\n}) => {\n  return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, note, \"   \", exercises);\n};\n\nconst Total = ({\n  total\n}) => React.createElement(\"h4\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, \"Total of \", total, \" exercises\");\n\nconst AllCourses = props => {\n  const courses = () => props.course.map(parts => React.createElement(Course, {\n    course: parts.parts,\n    name: parts.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }));\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, courses());\n};\n\nconst Course = props => {\n  const reducer = (accumulator, currentValue) => accumulator + currentValue;\n\n  const rows = () => props.course.map(parts => React.createElement(Note, {\n    id: parts.id,\n    note: parts.name,\n    exercises: parts.exercises,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }));\n\n  var total = props.course.map(parts => parts.exercises);\n  total = total.reduce(reducer);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, props.name), rows(), React.createElement(Total, {\n    total: total,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }));\n};\n\nexport default AllCourses;","map":{"version":3,"sources":["/Users/matiaslang/Desktop/koulu/FullStack2019/Osa_2/firstpart/src/AllCourses.js"],"names":["React","Note","note","id","exercises","Total","total","AllCourses","props","courses","course","map","parts","name","Course","reducer","accumulator","currentValue","rows","reduce"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,EAAP;AAAWC,EAAAA;AAAX,CAAD,KAA4B;AACrC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,IAAJ,SAAaE,SAAb,CADF;AAGD,CAJH;;AAKE,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAcA,KAAd,eADF;;AAIF,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAE5B,QAAMC,OAAO,GAAG,MAAMD,KAAK,CAACE,MAAN,CAAaC,GAAb,CAAiBC,KAAK,IAC1C,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAIA,KAAK,CAACA,KAAxB;AAA+B,IAAA,IAAI,EAAIA,KAAK,CAACC,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADoB,CAAtB;;AAGA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMJ,OAAO,EAAb,CADF;AAGD,CARD;;AAUA,MAAMK,MAAM,GAAIN,KAAD,IAAW;AAExB,QAAMO,OAAO,GAAG,CAACC,WAAD,EAAcC,YAAd,KAA+BD,WAAW,GAAGC,YAA7D;;AACA,QAAMC,IAAI,GAAG,MAAMV,KAAK,CAACE,MAAN,CAAaC,GAAb,CAAiBC,KAAK,IACvC,oBAAC,IAAD;AACE,IAAA,EAAE,EAAEA,KAAK,CAACT,EADZ;AAEE,IAAA,IAAI,EAAES,KAAK,CAACC,IAFd;AAGE,IAAA,SAAS,EAAED,KAAK,CAACR,SAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADiB,CAAnB;;AAQA,MAAIE,KAAK,GAAGE,KAAK,CAACE,MAAN,CAAaC,GAAb,CAAiBC,KAAK,IAAIA,KAAK,CAACR,SAAhC,CAAZ;AACAE,EAAAA,KAAK,GAAGA,KAAK,CAACa,MAAN,CAAaJ,OAAb,CAAR;AACA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKP,KAAK,CAACK,IAAX,CADF,EAEGK,IAAI,EAFP,EAGE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEZ,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADA;AAOD,CApBD;;AAsBA,eAAeC,UAAf","sourcesContent":["import React from 'react'\n\n\nconst Note = ({note, id, exercises }) => {\n    return (\n      <p>{note}   {exercises}</p>\n    )\n  }\n  const Total = ({total}) => (\n    <h4>Total of {total} exercises</h4>\n  )\n  \nconst AllCourses = (props) => {\n  \n  const courses = () => props.course.map(parts => \n    <Course course = {parts.parts} name = {parts.name}/>)\n    \n  return(\n    <div>{courses()}</div>\n  )\n}\n  \nconst Course = (props) => {\n    \n  const reducer = (accumulator, currentValue) => accumulator + currentValue\n  const rows = () => props.course.map(parts => \n    <Note \n      id={parts.id}\n      note={parts.name}\n      exercises={parts.exercises}\n    />\n  )\n\n  var total = props.course.map(parts => parts.exercises)\n  total = total.reduce(reducer)\n  return(\n  <div>\n    <h1>{props.name}</h1>\n    {rows()}\n    <Total total={total}/>\n  </div>\n  )\n}\n\nexport default AllCourses"]},"metadata":{},"sourceType":"module"}